// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/LexerParserRobot202220.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class LexerParserRobot202220 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object toSet(Object C) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object x:GCollections.unmodifiableCollection(C)) {
        $v1.add(x);
      }
      $result=$v1;
      if (true) break $try;
      $line=3;
      $rethrow(new RuntimeException("The function \"toSet(C:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"toSet",$line);
    }
    return $result;
  }
  public static IPushdownAutomaton createParser() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      Object Q=$fix($opUnionY($opUnionY($opUnionY($opIntvlY(0,8),$opIntvlY(50,66)),$opIntvlY(100,101)),GCollections.asSet(1000)));
      $line=9;
      Object \u03A3=$fix($opUnionY($opIntvlY('A','Z'),GCollections.asSet(' ','\n','(',')','{','}',',',';','.','=')));
      $line=10;
      Object \u0393=$fix(GCollections.asSet('$','1','2'));
      $line=11;
      Object q_0=$fix(0);
      $line=12;
      Object F=$fix(GCollections.asSet(101));
      $line=13;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=15;
      Object SkipChars=$fix(GCollections.asSet(' ','\n'));
      $line=17;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(0,1,$cast(java.lang.String.class,"K")),new Object[]{});
      $line=18;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1,2,$cast(java.lang.String.class,"O")),new Object[]{});
      $line=19;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(2,3,$cast(java.lang.String.class,"E")),new Object[]{});
      $line=20;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(3,4,$cast(java.lang.String.class,"O")),new Object[]{});
      $line=21;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(4,5,$cast(java.lang.String.class,"{")),new Object[]{"$"});
      $line=22;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(5,6,$cast(java.lang.String.class,"O")),new Object[]{});
      $line=23;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(5,100,$cast(java.lang.String.class,"}")),new Object[]{});
      $line=24;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(6,7,$cast(java.lang.String.class,"V")),new Object[]{});
      $line=25;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(6,50,$cast(java.lang.String.class,"(")),new Object[]{"1"});
      $line=26;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(7,8,$cast(java.lang.String.class,";")),new Object[]{});
      $line=27;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(8,6,$cast(java.lang.String.class,"O")),new Object[]{});
      $line=29;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(50,51,$cast(java.lang.String.class,"O")),new Object[]{});
      $line=30;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(50,53,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=31;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(51,52,$cast(java.lang.String.class,"V")),new Object[]{});
      $line=32;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(52,50,$cast(java.lang.String.class,",")),new Object[]{});
      $line=33;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(52,53,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=34;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(53,54,$cast(java.lang.String.class,"{")),new Object[]{"2"});
      $line=35;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(54,55,$cast(java.lang.String.class,"S();")),new Object[]{});
      $line=36;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(55,57,$cast(java.lang.String.class,"T.V=V;")),new Object[]{});
      $line=37;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(55,56,$cast(java.lang.String.class,"}")),new Object[]{"2"});
      $line=38;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(56,100,$cast(java.lang.String.class,"}")),new Object[]{});
      $line=39;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(56,58,$cast(java.lang.String.class,"OV(")),new Object[]{"1"});
      $line=40;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(57,55,$cast(java.lang.String.class,"T.V=V;")),new Object[]{});
      $line=41;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(57,56,$cast(java.lang.String.class,"}")),new Object[]{"2"});
      $line=43;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(58,59,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=45;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(58,1000,$cast(java.lang.String.class,"OV")),new Object[]{});
      $line=46;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(1000,58,$cast(java.lang.String.class,",")),new Object[]{});
      $line=47;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(1000,59,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=48;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(59,60,$cast(java.lang.String.class,"{")),new Object[]{"2"});
      $line=49;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(60,61,$cast(java.lang.String.class,"RNO(")),new Object[]{"1"});
      $line=51;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(61,64,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=52;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(61,62,$cast(java.lang.String.class,"V")),new Object[]{});
      $line=53;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(61,62,$cast(java.lang.String.class,"T.V")),new Object[]{});
      $line=54;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(62,63,$cast(java.lang.String.class,",")),new Object[]{});
      $line=55;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(62,64,$cast(java.lang.String.class,")")),new Object[]{"1"});
      $line=56;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(63,62,$cast(java.lang.String.class,"V")),new Object[]{});
      $line=57;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(63,62,$cast(java.lang.String.class,"T.V")),new Object[]{});
      $line=59;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(64,65,$cast(java.lang.String.class,";")),new Object[]{});
      $line=60;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(65,66,$cast(java.lang.String.class,"}")),new Object[]{"2"});
      $line=61;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(66,100,$cast(java.lang.String.class,"}")),new Object[]{});
      $line=63;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(100,101,$cast(java.lang.String.class,"")),new Object[]{"$"});
      $line=69;
      for (Object $v3:GCollections.unmodifiableCollection(Q)) {
        Object q=$v3;
        $line=70;
        for (Object $v4:GCollections.unmodifiableCollection(SkipChars)) {
          Object s=$v4;
          $line=71;
          $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(q,q,$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{});
        }
      }
      $line=76;
      $result=M;
      if (true) break $try;
      $line=77;
      $rethrow(new RuntimeException("The function \"createParser()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"createParser",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet();
      int $v7=$int(0);
      int $v8=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v6:for (int i=$v7; i<=$v8; i++) {
        $v5.add($invokeMethod("charAt",string,new Object[]{i}));
      }
      $result=$v5;
      if (true) break $try;
      $line=79;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"chars",$line);
    }
    return $result;
  }
  public static Object charsStrings(Object strings) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v9=$newSet(GCollections.emptySet());
      $v10:for (Object s:GCollections.unmodifiableCollection(strings)) {
        $v9.union(GCollections.unmodifiableSet(((java.lang.Iterable)($invokeMethod(LexerParserRobot202220.class,"chars",true,null,new Object[]{s})))));
      }
      $result=$v9;
      if (true) break $try;
      $line=80;
      $rethrow(new RuntimeException("The function \"charsStrings(strings:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"charsStrings",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v11=$newSet();
      int $v13=$int(0);
      int $v14=$int($opAbsolY(array))-1;
      $v12:for (int i=$v13; i<=$v14; i++) {
        $v11.add($getArrayValue(array,new Object[]{i}));
      }
      $result=$v11;
      if (true) break $try;
      $line=81;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"elements",$line);
    }
    return $result;
  }
  public static Object get1(java.lang.Iterable $v15) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v16=GCollections.unmodifiableCollection($v15).iterator();
      Object r=$v16.next();
      Object i=$v16.next();
      $result=r;
      if (true) break $try;
      $line=82;
      $rethrow(new RuntimeException("The function \"get1(\u27E8r,i\u27E9:java.lang.Iterable)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"get1",$line);
    }
    return $result;
  }
  public static Object get2(java.lang.Iterable $v17) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v18=GCollections.unmodifiableCollection($v17).iterator();
      Object r=$v18.next();
      Object i=$v18.next();
      $result=i;
      if (true) break $try;
      $line=83;
      $rethrow(new RuntimeException("The function \"get2(\u27E8r,i\u27E9:java.lang.Iterable)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"get2",$line);
    }
    return $result;
  }
  public static GPushdownAutomaton parser=null;
  static {
    int $line=0;
    $line=86;
    $try:try {
      parser=$defaultValue(GPushdownAutomaton.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,null,$line);
    }
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=89;
      Object currentString=$fix("");
      $line=91;
      parser=$cast(GPushdownAutomaton.class,$fix($invokeMethod(LexerParserRobot202220.class,"createParser",true,null,new Object[]{})));
      $line=95;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,parser));
      $line=99;
      $invokeMethod(LexerParserRobot202220.class,"testLexerParser",true,null,new Object[]{parser});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"main",$line);
    }
  }
  public static Object testLexerParser(IPushdownAutomaton P) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=104;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=105;
      String string=null;
      string=$defaultValue(String.class);
      $line=106;
      Object inputP=$fix($invokeMethod(LexerParserRobot202220.class,"elements",true,null,new Object[]{((gold.structures.automaton.IPushdownAutomaton)P).getInputAlphabet()}));
      $line=109;
      Object input=$fix("");
      $line=112;
      System.out.println($message(new Object[]{"----------------------------"}));
      $line=113;
      System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
      $line=114;
      System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
      $line=115;
      string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      $line=120;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=122;
        string=$cast(String.class,$fix($opAdditY(string,"  \n ")));
        $line=123;
        input=$fix("");
        $line=124;
        while (true) {
          if (!(!$opEqualY(((java.lang.String)string).charAt($int(0)),'$'))) break;
          $line=125;
          input=$fix($opAdditY(input,string));
          $line=126;
          string=$cast(String.class,$fix($opAdditY(((java.util.Scanner)sc).nextLine()," \n ")));
          $line=127;
          Object stringOut=$fix("");
          $line=128;
          if ($opSbsetY($invokeMethod(LexerParserRobot202220.class,"chars",true,null,new Object[]{input}),inputP)) {
            $line=129;
            Object ok=$fix(((gold.structures.automaton.IPushdownAutomaton)P).acceptsString($cast(java.lang.String.class,input)));
            $line=130;
            System.out.println($message(new Object[]{$opAdditY("Parser result: ",(($bool(ok))?("accepted "):("rejected ")))}));
          }
          else {
            $line=132;
            System.out.println($message(new Object[]{$opAdditY("Input contains invalid characters: ",$opDiffeY($invokeMethod(LexerParserRobot202220.class,"chars",true,null,new Object[]{input}),inputP))}));
          }
        }
        $line=135;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=137;
        System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
        $line=138;
        System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
        $line=139;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
      }
      $line=142;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=143;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,LexerParserRobot202220.class,"testLexerParser",$line);
    }
    return $result;
  }
}
